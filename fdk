#!/bin/zsh

function error() {
  echo "Error: $1"
  exit 1
}

function check_bins() {
  check_docker
  check_fzf
}

function check_docker() {
  if ! command -v docker &> /dev/null; then
    error "docker could not be found"
  fi
}

function check_fzf() {
  if ! command -v fzf &> /dev/null; then
    error "fzf could not be found"
  fi

  local fzf_version=$(fzf --version)
  local major_version=$(echo $fzf_version | cut -d'.' -f1)
  local minor_version=$(echo $fzf_version | cut -d'.' -f2)
  if [ $major_version = 0 ] && [ $minor_version -lt 53 ]; then
    error "fzf version must be at least 0.53.0"
  fi
}

check_bins

total_contextes=$(docker context ls --format "{{.Name}}" | wc -l | awk '{print $1}')
current_context=$(docker context show)

fzf_expect="alt-c,alt-i,alt-x"

choice=$(docker system info --format $'alt-i\tImages ({{.Images}} total)
alt-c\tContainers ({{.Containers}} total, {{.ContainersRunning}} up, {{.ContainersStopped}} down)
alt-x\tContext '"(${total_contextes} total, current: ${current_context})" | fzf --expect=$fzf_expect)

choices=("${(f)choice}")
expect=$choices[1]
selection=$choices[2]

if [[ "$expect" = "alt-c" || -z "$expect" && "$selection" =~ ^alt-c ]]; then
  exec fdkc
elif [[ "$expect" = "alt-i" || -z "$expect" && "$selection" =~ ^alt-i ]]; then
  exec fdki
elif [[ "$expect" = "alt-x" || -z "$expect" && "$selection" =~ ^alt-x ]]; then
  exec fdkx
fi
