#!/bin/zsh

function error() {
  echo "Error: $1"
  exit 1
}

function red() {
  echo -e "\033[1;31m$1\033[0m"
}

function green() {
  echo -e "\033[1;32m$1\033[0m"
}

function yellow() {
  echo -e "\033[1;33m$1\033[0m"
}

function check_bins() {
  check_docker
  check_fzf
}

function check_docker() {
  if ! command -v docker &> /dev/null; then
    error "docker could not be found"
  fi
}

function check_fzf() {
  if ! command -v fzf &> /dev/null; then
    error "fzf could not be found"
  fi

  local fzf_version=$(fzf --version)
  local major_version=$(echo $fzf_version | cut -d'.' -f1)
  local minor_version=$(echo $fzf_version | cut -d'.' -f2)
  if [ $major_version = 0 ] && [ $minor_version -lt 53 ]; then
    error "fzf version must be at least 0.53.0"
  fi
}

check_bins


current_context=$(docker context show)
fzf_expect="alt-i,alt-c,alt-h"
fzf_header=$'\n'"Current Docker context: $(green $current_context)"$'\n'\
$(yellow $'alt-i: Images,\talt-c: Containers,  alt-h: Home')

choice=$(docker context ls --format '{{if .Current}}* {{else}}  {{end}}{{.Name}}' | fzf --expect="$fzf_expect" --header="$fzf_header" --header-first)

if [ -z "$choice" ]; then
  exit 0
fi

choices=("${(f)choice}")
expect=$choices[1]
selection=$choices[2]


if [[ "$expect" = "alt-c" ]]; then
  exec fdkc
elif [[ "$expect" = "alt-i" ]]; then
  exec fdki
elif [[ "$expect" = "alt-h" ]]; then
  exec fdk
elif [[ -n "$selection" ]]; then
  selection=${selection#\* }
  selection=${selection#  }
  docker context use "$selection"
  exec fdkx
fi
